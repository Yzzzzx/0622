1.xampp的使用
	a.访问apache
		浏览器中输入127.0.0.1
	b.访问mysql
		浏览器中输入127.0.0.1/phpmyadmin
		phpmyadmin是一款bs架构软件，用于管理mysql的工具
	c.设置环境变量(让系统可以找到mysql命令所在位置)
		vim ~/.bash_profile
		PATH=/Applications/XAMPP/bin:$PATH
		export PATH
		当前用户的家目录中执行(让环境变量生效)
		source .bash_profile 
	d.终端打开
		前往--实用工具--终端
	e.登录mysql
		mysql
			登录本地数据库
		mysql -u root -p
			管理员登录mysql
		mysql -h 127.0.0.1 -u root -p
			管理员登录IP为127.0.0.1的数据库
	f.mysql基础
		常说的数据库分为2部分，数据库软件，数据库数据
		一个数据库软件中可以包含多个数据库的数据
		mysql数据库是由表组成的
		mysql的表是由数据组成的
		基础命令(登录mysql之后实用)
		show databases;
			查看当前有哪些数据库
		select database();
			查看当前数据库的名字
			null代表还没有选择数据库(空)
		use mysql;
			切换当前数据库为mysql
		show tables;
			查看当前数据库中有哪些表+
		select * from user;
		select * from user \G;
			查看user表中所有的数据
	g.数据库的操作
		1>创建数据库
			语法:create database 数据库名字;
			需求:创建一个数据库名字为shop
			create database shop;

		2>删除数据库
			语法:drop database 数据库名字;
			需求:删除shop数据库
			drop database shop;
	h.数据库的表结构
		1>数据类型
			字符类型  ‘123’ ‘abc’  char  varchar
			数值类型  123  456     int
			日期类型  ‘2000-01-01’ date
			char     定长 char(6)     4—存储6，速度快，浪费空间
			varchar  变长 varchar(6)  4--存储4，速度慢，省空间
		2>表结构的创建
			语法:create table 表(
					列、表头、字段 数据类型，
					列           数据类型,
					…
				);
			需求:创建表商品(goods),商品名称(gname) 字符类型10个字符，价格(price) 整型，出厂日期(ddate)日期类型
	
      			 create table goods(
        			 gname char(10),               
        		 	price int,
         			ddate date);
		3>查看表结构
			语法:desc 表名；
			需求:查看goods表的表结构
			desc goods;
		4>删除表结构
			语法:drop table 表名;
			需求:删除goods表表结构
			drop table goods;
		5>修改表结构
			增加列
				alter table goods add id int;
			修改列
				alter table goods modify id char(20);
			删除列
				 alter table goods drop column id;
		6>约束
			主键约束  列中的数据唯一，不能为空，每张表中只能有一个，主键主要是针对外键来说的
			唯一约束  列中的数据唯一，可以为空，作为主键约束的补充
			非空约束  列中的数据不能为空
			检查约束  列中的数据是否满足条件
			外键约束  列中的数据依赖于另外一张表中列的数据
			语法:
			create table 表(
				列 数据类型 primary key,   #主键
				列 数据类型 unique,        #唯一
				列 数据类型 not null，      #非空
				列 数据类型 check(检查条件)，#检查
				列 数据类型 references 被参考表(被参考列)  #外键(参考)
			);
	i.SQL的分类
		SQL:结构化查询语言
			DDL:数据库定义语言  create alter drop truncate
			DML:数据库操作语言  insert delete update
			DCL:数据库控制语言  grant revoke
			DQL:数据库查询语言  select
	j.DML语句
		1>数据的新增
			字符、日期需要加单引号
			数值类型直接使用
			列和值一定要对应(位置、数据类型)
			1)向表中指定列新增数据
			语法:insert into 表(列1，列2) values(值1，值2);
			需求:向goods表中新增数据，商品名称simida，价格250
				insert into goods(gname,price) values('simida',250); 
			2)向表中所有列新增数据
			语法:insert into 表 values(值1，值2，值3....);
			需求:向goods表中新增数据，商品名称haleshao，价格290，出厂日期 2000-01-01
				insert into goods values('haleshao',290,'2000-01-01');
		2>数据的修改
			语法:update 表 set 列=值 where 条件;
			如果不加where条件，默认修改的是整个列的数据
			如果增加where条件，修改的是指定行的数据
			需求:修改goods表中名字叫heleshao的价格为100
				update goods set price=100 where gname='haleshao';
			需求：修改goods表中所有商品价格为0
				update goods set price=0;
		3>数据的删除
			delete     删除指定数据，删除数据可以找回
			truncate   删除所有数据，删除数据无法找回，破坏数据的结构，阶段表
			1)delete
			语法:delete from 表 where 条件;
			需求:删除goods表中名字叫haleshao的所有数据
				delete from goods where gname='haleshao';
			需求:删除goods表中所有数据
				delete from goods;
			2)truncate 
			语法:trancate table 表;
			需求:删除goods表中所有数据
				truncate table goods;
	k.数据的查询
		 1>查询的分类
		 	简单查询 
		 	多表查询
		 	子查询
		 	分组查询
		 2>简单查询
		 	注意:登录IP为192.168.5.254的数据库(root root)
		 	ecshop项目表结构说明文档
		 	https://blog.csdn.net/weixin_37678117/article/details/81192245
		 	查询所有数据
		 		需求:查询ecs_goods表中所有数据
		 			select * from ecs_goods;	
		 	查询指定行的数据
		 		需求:查询ecs_goods表中商品名称是KD876的所有数据
		 			select * from ecs_goods where goods_name='KD876';
		 	查询指定列的数据
		 		需求:查询ecs_goods表中所有商品的名称和本店售价
		 			select goods_name,shop_price from ecs_goods;
		 	查询指定行的列的数据
		 		需求:查询ecs_goods表中商品名称是KD876的市场售价
		 			select market_price from ecs_goods where goods_name='KD876';
		3>where条件
			1)比较
				>
				<
				=
				>=
				<=
				!=
				<>
				需求:查询ecs_goods表中本店售价高于2000的所有商品信息
				select * from ecs_goods where shop_price>2000;
				需求:查询ecs_goods表中商品名称不是KD876的所有商品名称
				select goods_name from ecs_goods where goods_name<>'KD876';
			2)关系
				and  同时满足
				or   满足一个即可
				not  不满足
				需求:查询ecs_goods表中商品名称是KD876或者诺基亚的所有信息
				select * from ecs_goods where goods_name='KD876' or goods_name='诺基亚';
				需求:查询ecs_goods表中本店售价高于1000并且低于2000的商品名称
				select goods_name from ecs_goods where shop_price>1000 and shop_price<2000;
			3)区间
				between。。。。and。。。
				包括两个端点，小在前，大在后
				需求:查询ecs_goods表中本店售价范围800和1999之间的所有信息
				select * from ecs_goods where shop_price between 800 and 1999;	
			4)空值
				没有任何数据类型，没有任何值,不能用于比较和运算，查询时候使用is null 或者is not null
				需求:查询ecs_goods表中suppliers_id为空的所有信息
				select * from ecs_goods where suppliers_id is null;
			5)模糊查询
				like
				_    一个字符
				%    任意个字符
				需求:查询ecs_goods表中商品名称是诺基亚开头的所有信息
					select * from ecs_goods where goods_name like '诺基亚%';
				需求:查询ecs_goods表中商品名称是6结尾的所有信息
					select * from ecs_goods where goods_name like '%6';	
			6)in查询
				或者的关系，类似于or
				需求:查询ecs_goods表中商品名称是KD876或者诺基亚的所有信息
				select * from ecs_goods where goods_name in ('KD876','诺基亚');
				




			





























